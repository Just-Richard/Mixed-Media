{"ast":null,"code":"var _jsxFileName = \"/Users/richardthompson/Documents/GitHub/Wish-Watch/wish-watch/src/components/Add.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Add = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [mediaType, setMediaType] = useState(\"movie\");\n  const handleSearch = async searchTerm => {\n    if (!searchTerm.trim()) {\n      setResults([]);\n      return;\n    }\n    let url = \"\";\n    let headers = {};\n    switch (mediaType) {\n      case \"movie\":\n        url = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${searchTerm}`;\n        break;\n      case \"anime\":\n      case \"tv\":\n        url = `https://api.themoviedb.org/3/search/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&query=${searchTerm}`;\n        break;\n      case \"book\":\n        url = `https://www.googleapis.com/books/v1/volumes?q=${searchTerm}&key=${process.env.REACT_APP_BOOKS_KEY}`;\n        break;\n      case \"game\":\n        url = `https://api.rawg.io/api/games?search=${searchTerm}&key=${process.env.REACT_APP_GAMES_KEY}`;\n        break;\n      default:\n        return;\n    }\n    try {\n      const res = await fetch(url, {\n        headers\n      });\n      const data = await res.json();\n      if (!data || data.errors) {\n        setResults([]);\n        return;\n      }\n      if (mediaType === \"book\") {\n        if (!data.items || data.items.length === 0) {\n          setResults([]);\n          return;\n        }\n        setResults(data.items);\n      } else if (mediaType === \"anime\") {\n        const anime = (data.results || []).filter(item => {\n          var _item$origin_country, _item$genre_ids;\n          return ((_item$origin_country = item.origin_country) === null || _item$origin_country === void 0 ? void 0 : _item$origin_country.includes(\"JP\")) && ((_item$genre_ids = item.genre_ids) === null || _item$genre_ids === void 0 ? void 0 : _item$genre_ids.includes(16));\n        });\n        setResults(anime);\n      } else if (mediaType === \"tv\") {\n        const tv = (data.results || []).filter(item => {\n          var _item$origin_country2, _item$genre_ids2;\n          return !((_item$origin_country2 = item.origin_country) !== null && _item$origin_country2 !== void 0 && _item$origin_country2.includes(\"JP\")) && !((_item$genre_ids2 = item.genre_ids) !== null && _item$genre_ids2 !== void 0 && _item$genre_ids2.includes(16));\n        });\n        setResults(tv);\n      } else {\n        setResults(data.results || []);\n      }\n    } catch (err) {\n      console.error(\"Search failed:\", err);\n      setResults([]);\n    }\n  };\n  const onInputChange = e => {\n    const searchTerm = e.target.value;\n    setQuery(searchTerm);\n    if (searchTerm.trim() === \"\") {\n      setResults([]);\n      return;\n    }\n    handleSearch(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: mediaType,\n            onChange: e => setMediaType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"movie\",\n              children: \" Movies \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"anime\",\n              children: \" Anime \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"book\",\n              children: \" Books \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"tv\",\n              children: \" TV Shows \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"game\",\n              children: \" Video Games \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search for Anything...\",\n            value: query,\n            onChange: onInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"results\",\n          children: [\" \", results.map(media => {\n            var _media$id;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(ResultCard, {\n                movie: media\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)]\n            }, media.id || ((_media$id = media.id) === null || _media$id === void 0 ? void 0 : _media$id.videoId), true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this);\n          }), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Add, \"q2WxB+awSABOhiyvI1CJt+7TFcY=\");\n_c = Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["React","useState","ResultCard","jsxDEV","_jsxDEV","Add","_s","query","setQuery","results","setResults","mediaType","setMediaType","handleSearch","searchTerm","trim","url","headers","process","env","REACT_APP_TMDB_KEY","REACT_APP_BOOKS_KEY","REACT_APP_GAMES_KEY","res","fetch","data","json","errors","items","length","anime","filter","item","_item$origin_country","_item$genre_ids","origin_country","includes","genre_ids","tv","_item$origin_country2","_item$genre_ids2","err","console","error","onInputChange","e","target","value","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","media","_media$id","movie","id","videoId","_c","$RefreshReg$"],"sources":["/Users/richardthompson/Documents/GitHub/Wish-Watch/wish-watch/src/components/Add.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\n\nexport const Add = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const [mediaType, setMediaType] = useState(\"movie\");\n\n  const handleSearch = async (searchTerm) => {\n    if (!searchTerm.trim()) {\n      setResults([]);\n      return;\n    }\n\n    let url = \"\";\n    let headers = {};\n\n    switch (mediaType) {\n      case \"movie\":\n        url = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${searchTerm}`;\n        break;\n      case \"anime\":\n      case \"tv\":\n        url = `https://api.themoviedb.org/3/search/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&query=${searchTerm}`;\n        break;\n      case \"book\":\n        url = `https://www.googleapis.com/books/v1/volumes?q=${searchTerm}&key=${process.env.REACT_APP_BOOKS_KEY}`;\n        break;\n      case \"game\":\n        url = `https://api.rawg.io/api/games?search=${searchTerm}&key=${process.env.REACT_APP_GAMES_KEY}`;\n        break;\n      default:\n        return;\n    }\n\n    try {\n      const res = await fetch(url, { headers });\n      const data = await res.json();\n\n      if (!data || data.errors) {\n        setResults([]);\n        return;\n      }\n\n      if (mediaType === \"book\") {\n        if (!data.items || data.items.length === 0) {\n          setResults([]);\n          return;\n        }\n\n        setResults(data.items);\n      } else if (mediaType === \"anime\") {\n        const anime = (data.results || []).filter(\n          (item) =>\n            item.origin_country?.includes(\"JP\") && item.genre_ids?.includes(16)\n        );\n        setResults(anime);\n      } else if (mediaType === \"tv\") {\n        const tv = (data.results || []).filter(\n          (item) =>\n            !item.origin_country?.includes(\"JP\") &&\n            !item.genre_ids?.includes(16)\n        );\n        setResults(tv);\n      } else {\n        setResults(data.results || []);\n      }\n    } catch (err) {\n      console.error(\"Search failed:\", err);\n      setResults([]);\n    }\n  };\n\n  const onInputChange = (e) => {\n    const searchTerm = e.target.value;\n    setQuery(searchTerm);\n\n    if (searchTerm.trim() === \"\") {\n      setResults([]);\n      return;\n    }\n\n    handleSearch(searchTerm);\n  };\n\n  return (\n    <div className=\"add-page\">\n      <div className=\"container\">\n        <div className=\"add-content\">\n          <div className=\"input-wrapper\">\n            <select\n              value={mediaType}\n              onChange={(e) => setMediaType(e.target.value)}\n            >\n              <option value=\"movie\"> Movies </option>\n              <option value=\"anime\"> Anime </option>\n              <option value=\"book\"> Books </option>\n              <option value=\"tv\"> TV Shows </option>\n              <option value=\"game\"> Video Games </option>\n            </select>{\" \"}\n            <br /> <br />\n            <input\n              type=\"text\"\n              placeholder=\"Search for Anything...\"\n              value={query}\n              onChange={onInputChange}\n            />\n          </div>\n\n          {results.length > 0 && (\n            <ul className=\"results\">\n              {\" \"}\n              {results.map((media) => (\n                <li key={media.id || media.id?.videoId}>\n                  {\" \"}\n                  <ResultCard movie={media} />\n                </li>\n              ))}{\" \"}\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}